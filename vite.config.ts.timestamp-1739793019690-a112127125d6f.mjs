// vite.config.ts
import preact from 'file:///home/odin/code/github.com/kibis-is/connect-kit/node_modules/.pnpm/@preact+preset-vite@2.10.1_@babel+core@7.26.9_preact@10.26.0_vite@5.4.14_@types+node@22.13.4_sass@1.85.0_/node_modules/@preact/preset-vite/dist/esm/index.mjs';
import { resolve } from 'node:path';
import { defineConfig } from 'file:///home/odin/code/github.com/kibis-is/connect-kit/node_modules/.pnpm/vite@5.4.14_@types+node@22.13.4_sass@1.85.0/node_modules/vite/dist/node/index.js';
import cssInjectedByJsPlugin from 'file:///home/odin/code/github.com/kibis-is/connect-kit/node_modules/.pnpm/vite-plugin-css-injected-by-js@3.5.2_vite@5.4.14_@types+node@22.13.4_sass@1.85.0_/node_modules/vite-plugin-css-injected-by-js/dist/esm/index.js';
import dts from 'file:///home/odin/code/github.com/kibis-is/connect-kit/node_modules/.pnpm/vite-plugin-dts@4.5.0_@types+node@22.13.4_rollup@4.34.8_typescript@5.7.3_vite@5.4.14_@types+node@22.13.4_sass@1.85.0_/node_modules/vite-plugin-dts/dist/index.mjs';
import tsconfigPaths from 'file:///home/odin/code/github.com/kibis-is/connect-kit/node_modules/.pnpm/vite-tsconfig-paths@5.1.4_typescript@5.7.3_vite@5.4.14_@types+node@22.13.4_sass@1.85.0_/node_modules/vite-tsconfig-paths/dist/index.js';

// package.json
var version = '1.0.0-beta.2';

// vite.config.ts
var __vite_injected_original_dirname = '/home/odin/code/github.com/kibis-is/connect-kit';
var vite_config_default = defineConfig({
  build: {
    lib: {
      entry: 'src/index.ts',
      formats: ['es'],
      fileName: 'index',
    },
  },
  css: {
    modules: {
      localsConvention: 'camelCaseOnly',
    },
    preprocessorOptions: {
      scss: {
        additionalData: `@use "@styles/global.scss";`,
        // include the global scss file in the library build
        api: 'modern-compiler',
      },
    },
  },
  define: {
    __VERSION__: JSON.stringify(version),
  },
  plugins: [
    cssInjectedByJsPlugin(),
    dts({
      tsconfigPath: 'tsconfig.build.json',
    }),
    preact(),
    tsconfigPaths({
      configNames: ['tsconfig.build.json'],
    }),
  ],
  resolve: {
    alias: {
      // resolutions needed for sass, typescript resolutions handled by the vite-tsconfig-paths plugin
      '@fonts': resolve(__vite_injected_original_dirname, 'src/fonts'),
      '@styles': resolve(__vite_injected_original_dirname, 'src/styles'),
    },
  },
});
export { vite_config_default as default };
//# sourceMappingURL=data:application/json;base64,
